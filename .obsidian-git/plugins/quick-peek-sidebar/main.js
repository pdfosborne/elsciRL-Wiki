/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var d=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var c=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var u=(l,n)=>{for(var i in n)d(l,i,{get:n[i],enumerable:!0})},b=(l,n,i,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let t of c(n))!f.call(l,t)&&t!==i&&d(l,t,{get:()=>n[t],enumerable:!(e=p(n,t))||e.enumerable});return l};var S=l=>b(d({},"__esModule",{value:!0}),l);var m={};u(m,{default:()=>o});module.exports=S(m);var a=require("obsidian"),r={leftSidebar:!0,rightSidebar:!0,syncLeftRight:!1,enforceSameDelay:!0,sidebarDelay:150,sidebarExpandDelay:10,leftSideBarPixelTrigger:20,rightSideBarPixelTrigger:20,overlayMode:!1,expandCollapseSpeed:370,leftSidebarMaxWidth:325,rightSidebarMaxWidth:325},o=class extends a.Plugin{constructor(){super(...arguments);this.isHoveringLeft=!1;this.isHoveringRight=!1;this.documentClickHandler=i=>{let e=i.target;if(!this.leftSplit||!this.rightSplit)return;let t=this.leftSplit.containerEl,s=this.rightSplit.containerEl;!t.contains(e)&&!s.contains(e)&&(!this.leftSplit.collapsed&&this.settings.leftSidebar&&this.collapseLeft(),!this.rightSplit.collapsed&&this.settings.rightSidebar&&this.collapseRight())};this.getEditorWidth=()=>this.app.workspace.containerEl.clientWidth;this.mouseMoveHandler=i=>{let e=i.clientX;if(this.settings.rightSidebar&&!this.isHoveringRight&&this.rightSplit.collapsed){let t=this.getEditorWidth();this.isHoveringRight=e>=t-this.settings.rightSideBarPixelTrigger,this.isHoveringRight&&this.rightSplit.collapsed&&setTimeout(()=>{this.isHoveringRight&&(this.settings.syncLeftRight?this.expandBoth():this.expandRight())},this.settings.sidebarExpandDelay),setTimeout(()=>{this.isHoveringRight||this.collapseRight()},this.settings.sidebarDelay)}this.settings.leftSidebar&&!this.isHoveringLeft&&this.leftSplit.collapsed&&(this.isHoveringLeft=e<=this.settings.leftSideBarPixelTrigger,this.isHoveringLeft&&this.leftSplit.collapsed&&setTimeout(()=>{this.isHoveringLeft&&(this.settings.syncLeftRight?this.expandBoth():this.expandLeft())},this.settings.sidebarExpandDelay),setTimeout(()=>{this.isHoveringLeft||this.collapseLeft()},this.settings.sidebarDelay))};this.rightSplitMouseLeaveHandler=i=>{var t;let e=i.relatedTarget;e&&(e.closest(".workspace-tab-header-container-inner")||e.hasClass&&e.hasClass("menu")||(t=e==null?void 0:e.classList)!=null&&t.contains("menu")||e!=null&&e.closest(".menu"))||this.settings.rightSidebar&&(this.isHoveringRight=!1,this.rightSplit.containerEl.removeClass("hovered"),setTimeout(()=>{this.isHoveringRight||(this.settings.syncLeftRight&&this.settings.leftSidebar?this.collapseBoth():this.collapseRight())},this.settings.sidebarDelay))};this.leftSplitMouseLeaveHandler=i=>{var t;let e=i.relatedTarget;e&&(e.closest(".workspace-tab-header-container-inner")||e.hasClass&&e.hasClass("menu")||(t=e==null?void 0:e.classList)!=null&&t.contains("menu")||e!=null&&e.closest(".menu"))||this.settings.leftSidebar&&(this.isHoveringLeft=!1,this.leftSplit.containerEl.removeClass("hovered"),setTimeout(()=>{this.isHoveringLeft||(this.settings.syncLeftRight&&this.settings.rightSidebar?this.collapseBoth():this.collapseLeft())},this.settings.sidebarDelay))};this.leftRibbonMouseEnterHandler=()=>{this.settings.leftSidebar&&(this.isHoveringLeft=!0,setTimeout(()=>{this.isHoveringLeft&&(this.settings.syncLeftRight&&this.settings.rightSidebar?this.expandBoth():this.expandLeft())},this.settings.sidebarExpandDelay))}}async onload(){await this.loadSettings(),this.settings.overlayMode&&document.body.classList.add("sidebar-overlay-mode"),document.body.classList.add("open-sidebar-hover-plugin"),this.updateCSSVariables(),this.app.workspace.onLayoutReady(()=>{this.leftSplit=this.app.workspace.leftSplit,this.rightSplit=this.app.workspace.rightSplit,this.leftRibbon=this.app.workspace.leftRibbon,document.addEventListener("mousemove",this.mouseMoveHandler),this.rightSplitMouseMoveHandler=()=>this.rightSplit.containerEl.addClass("hovered"),this.rightSplit.containerEl.addEventListener("mousemove",this.rightSplitMouseMoveHandler),this.rightSplit.containerEl.addEventListener("mouseleave",this.rightSplitMouseLeaveHandler),this.rightSplitMouseEnterHandler=()=>{this.isHoveringRight=!0,this.rightSplit.containerEl.addClass("hovered")},this.rightSplit.containerEl.addEventListener("mouseenter",this.rightSplitMouseEnterHandler),this.leftRibbon&&this.leftRibbon.containerEl&&this.leftRibbon.containerEl.addEventListener("mouseenter",this.leftRibbonMouseEnterHandler),this.leftSplitMouseMoveHandler=()=>this.leftSplit.containerEl.addClass("hovered"),this.leftSplit.containerEl.addEventListener("mousemove",this.leftSplitMouseMoveHandler),this.leftSplit.containerEl.addEventListener("mouseleave",this.leftSplitMouseLeaveHandler),this.leftSplitMouseEnterHandler=()=>{this.isHoveringLeft=!0,this.leftSplit.containerEl.addClass("hovered")},this.leftSplit.containerEl.addEventListener("mouseenter",this.leftSplitMouseEnterHandler),document.addEventListener("click",this.documentClickHandler)}),this.addSettingTab(new g(this.app,this))}onunload(){if(this.saveSettings(),document.body.classList.remove("sidebar-overlay-mode"),document.body.classList.remove("open-sidebar-hover-plugin"),document.removeEventListener("mousemove",this.mouseMoveHandler),document.removeEventListener("click",this.documentClickHandler),this.rightSplit&&this.rightSplit.containerEl){this.rightSplit.containerEl.removeEventListener("mouseleave",this.rightSplitMouseLeaveHandler),this.rightSplit.containerEl.removeEventListener("mouseenter",this.rightSplitMouseEnterHandler);let i=()=>this.rightSplit.containerEl.addClass("hovered");this.rightSplit.containerEl.removeEventListener("mousemove",i)}if(this.leftRibbon&&this.leftRibbon.containerEl&&this.leftRibbon.containerEl.removeEventListener("mouseenter",this.leftRibbonMouseEnterHandler),this.leftSplit&&this.leftSplit.containerEl){this.leftSplit.containerEl.removeEventListener("mouseleave",this.leftSplitMouseLeaveHandler),this.leftSplit.containerEl.removeEventListener("mouseenter",this.leftSplitMouseEnterHandler);let i=()=>this.leftSplit.containerEl.addClass("hovered");this.leftSplit.containerEl.removeEventListener("mousemove",i)}}async loadSettings(){this.settings=Object.assign({},r,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}updateCSSVariables(){let i=document.createElement("style");i.id="obsidian-quick-peek-sidebar-variables";let e=document.getElementById(i.id);e&&e.remove(),i.textContent=`
      :root {
        --sidebar-expand-collapse-speed: ${this.settings.expandCollapseSpeed}ms;
        --sidebar-expand-delay: ${this.settings.sidebarExpandDelay}ms;
        --left-sidebar-max-width: ${this.settings.leftSidebarMaxWidth}px;
        --right-sidebar-max-width: ${this.settings.rightSidebarMaxWidth}px;
      }
      
      body {
        --sidebar-width: ${this.settings.leftSidebarMaxWidth}px !important;
        --right-sidebar-width: ${this.settings.rightSidebarMaxWidth}px !important;
      }
    `,document.head.appendChild(i)}expandRight(){this.rightSplit.expand(),this.isHoveringRight=!0}expandLeft(){this.leftSplit.expand(),this.isHoveringLeft=!0}expandBoth(){this.expandRight(),this.expandLeft()}collapseRight(){this.rightSplit.collapse(),this.isHoveringRight=!1}collapseLeft(){this.leftSplit.collapse(),this.isHoveringLeft=!1}collapseBoth(){this.collapseRight(),this.collapseLeft()}},g=class extends a.PluginSettingTab{constructor(i,e){super(i,e);this.plugin=e}display(){let{containerEl:i}=this;i.empty(),new a.Setting(i).setName("Left sidebar hover").setDesc("Enables the expansion and collapsing of the left sidebar on hover.").addToggle(e=>e.setValue(this.plugin.settings.leftSidebar).onChange(async t=>{this.plugin.settings.leftSidebar=t,await this.plugin.saveSettings()})),new a.Setting(i).setName("Right sidebar hover").setDesc("Enables the expansion and collapsing of the right sidebar on hover. Only collapses the right panel unless you have a right ribbon.").addToggle(e=>e.setValue(this.plugin.settings.rightSidebar).onChange(async t=>{this.plugin.settings.rightSidebar=t,await this.plugin.saveSettings()})),new a.Setting(i).setName("Sync left and right").setDesc("If enabled, hovering over the right sidebar will also expand the left sidebar at the same time, and vice versa. (Left and Right sidebar must both be enabled above)").addToggle(e=>e.setValue(this.plugin.settings.syncLeftRight).onChange(async t=>{this.plugin.settings.syncLeftRight=t,await this.plugin.saveSettings()})),new a.Setting(i).setName("Overlay mode").setDesc("When enabled, sidebars will slide over the main content without affecting the layout. When disabled, sidebars will expand by pushing content.").addToggle(e=>e.setValue(this.plugin.settings.overlayMode).onChange(async t=>{this.plugin.settings.overlayMode=t,t?document.body.classList.add("sidebar-overlay-mode"):document.body.classList.remove("sidebar-overlay-mode"),await this.plugin.saveSettings()})),new a.Setting(i).setName("Behavior").setHeading(),new a.Setting(i).setName("Left sidebar pixel trigger").setDesc("Specify the number of pixels from the left edge of the editor that will trigger the left sidebar to open on hover (must be greater than 0)").addText(e=>{e.setPlaceholder("30").setValue(this.plugin.settings.leftSideBarPixelTrigger.toString()).onChange(async t=>{let s=Number(t);!t||isNaN(s)||s<1?this.plugin.settings.leftSideBarPixelTrigger=r.leftSideBarPixelTrigger:this.plugin.settings.leftSideBarPixelTrigger=s,await this.plugin.saveSettings()})}),new a.Setting(i).setName("Right sidebar pixel trigger").setDesc("Specify the number of pixels from the right edge of the editor that will trigger the right sidebar to open on hover (must be greater than 0)").addText(e=>{e.setPlaceholder("30").setValue(this.plugin.settings.rightSideBarPixelTrigger.toString()).onChange(async t=>{let s=Number(t);!t||isNaN(s)||s<1?this.plugin.settings.rightSideBarPixelTrigger=r.rightSideBarPixelTrigger:this.plugin.settings.rightSideBarPixelTrigger=s,await this.plugin.saveSettings()})}),new a.Setting(i).setName("Timing").setHeading(),new a.Setting(i).setName("Sidebar collapse delay").setDesc("The delay in milliseconds before the sidebar collapses after the mouse has left. Enter '0' to disable delay.").addText(e=>{e.setPlaceholder("300").setValue(this.plugin.settings.sidebarDelay.toString()).onChange(async t=>{let s=Number(t);!s||isNaN(s)||s<0?this.plugin.settings.sidebarDelay=r.sidebarDelay:this.plugin.settings.sidebarDelay=s,await this.plugin.saveSettings()})}),new a.Setting(i).setName("Sidebar expand delay").setDesc("The delay in milliseconds before the sidebar expands after hovering. Default is 200ms.").addText(e=>{e.setPlaceholder("200").setValue(this.plugin.settings.sidebarExpandDelay.toString()).onChange(async t=>{let s=Number(t);!s||isNaN(s)||s<0?this.plugin.settings.sidebarExpandDelay=r.sidebarExpandDelay:this.plugin.settings.sidebarExpandDelay=s,this.plugin.updateCSSVariables(),await this.plugin.saveSettings()})}),new a.Setting(i).setName("Expand/collapse animation speed").setDesc("The speed of the sidebar expand/collapse animation in milliseconds.").addText(e=>{var t;e.setPlaceholder("300").setValue(((t=this.plugin.settings.expandCollapseSpeed)==null?void 0:t.toString())||"300").onChange(async s=>{let h=Number(s);!s||isNaN(h)||h<0?this.plugin.settings.expandCollapseSpeed=r.expandCollapseSpeed:this.plugin.settings.expandCollapseSpeed=h,this.plugin.updateCSSVariables(),await this.plugin.saveSettings()})}),new a.Setting(i).setName("Appearance").setHeading(),new a.Setting(i).setName("Left sidebar maximum width").setDesc("Specify the maximum width in pixels for the left sidebar when expanded").addText(e=>{e.setPlaceholder("300").setValue(this.plugin.settings.leftSidebarMaxWidth.toString()).onChange(async t=>{let s=Number(t);!t||isNaN(s)||s<100?this.plugin.settings.leftSidebarMaxWidth=r.leftSidebarMaxWidth:this.plugin.settings.leftSidebarMaxWidth=s,this.plugin.updateCSSVariables(),await this.plugin.saveSettings()})}),new a.Setting(i).setName("Right sidebar maximum width").setDesc("Specify the maximum width in pixels for the right sidebar when expanded").addText(e=>{e.setPlaceholder("300").setValue(this.plugin.settings.rightSidebarMaxWidth.toString()).onChange(async t=>{let s=Number(t);!t||isNaN(s)||s<100?this.plugin.settings.rightSidebarMaxWidth=r.rightSidebarMaxWidth:this.plugin.settings.rightSidebarMaxWidth=s,this.plugin.updateCSSVariables(),await this.plugin.saveSettings()})})}};

/* nosourcemap */